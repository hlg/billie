<?xml version="1.0" encoding="UTF-8"?>
<project name="common" default="dist.module" xmlns:ivy="antlib:org.apache.ivy.ant">

    <property file="../common.build.properties"/>
    <echo message="version from build.properties: ${version}" />
    <patternset id="library.patterns">
        <include name="*.jar"/>
    </patternset>

    <taskdef name="groovyc"
             classname="org.codehaus.groovy.ant.Groovyc"
             classpath="${groovy.path}"/>

    <dirname property="basedir" file="${ant.file}"/>

    <target name="check.tests">
        <available file="${module.basedir}/test" property="tests.available" />
    </target>

    <target name="config.module">
        <ivy:configure file="${ivy.settings.file}"/>
        <dirname property="module.basedir" file="${ant.file}"/>
        <property name="module.basedir" value="${basedir}"/>
        <property name="module.output.dir" value="${module.basedir}/out"/>

        <path id="sourcepath">
            <dirset dir="${module.basedir}">
                <include name="src"/>
                <include name="test"/>
            </dirset>
        </path>
    </target>

    <target name="resolve.module" depends="config.module">
        <echo message="resolving: ${module.basedir}"/>
        <property name="ivy.config" value="default" />
        <echo message="resolving with config: ${ivy.config}" />
        <ivy:resolve file="${module.basedir}/ivy.xml" conf="${ivy.config}"/>
        <ivy:cachepath pathid="ivy.classpath"/>
        <ivy:retrieve type="jar,bundle"/>
        <!-- ivy:report / -->
    </target>

    <target name="compile.module" depends="resolve.module">
        <mkdir dir="${module.output.dir}/classes"/>
        <javac destdir="${module.output.dir}/classes" debug="on" srcdir="${module.basedir}/src">
            <classpath>
                <path refid="ivy.classpath"/>
            </classpath>
        </javac>
        <groovyc destdir="${module.output.dir}/classes" srcdir="${module.basedir}/src">
            <classpath>
                <path refid="ivy.classpath"/>
            </classpath>
        </groovyc>
        <copy todir="${module.output.dir}/classes" file="${module.basedir}/log4j.xml" failonerror="false" />
        <copy todir="${module.output.dir}/classes/resources" failonerror="false">
            <fileset dir="${module.basedir}/src/resources"/>
        </copy>
    </target>

    <target name="compile.tests" depends="check.tests, compile.module" if="tests.available">
        <mkdir dir="${module.output.dir}/testclasses"/>
        <javac destdir="${module.output.dir}/testclasses" debug="on" srcdir="${module.basedir}/test">
            <classpath>
                <path refid="ivy.classpath"/>
                <pathelement path="${module.output.dir}/classes" />
            </classpath>
        </javac>
        <copy todir="${module.output.dir}/testclasses/resources" failonerror="false">
            <fileset dir="${module.basedir}/test/resources"/>
        </copy>
    </target>


    <target name="dist.module" depends="compile.module, test.module">
        <tstamp/>
        <property name="implversion" value="${DSTAMP}${TSTAMP}"/>

        <pathconvert property="mf.classpath" pathsep=" ">
            <path refid="ivy.classpath"/>
            <flattenmapper/>
        </pathconvert>

        <pathconvert property="run.classpath" pathsep="${path.separator}">
            <path refid="ivy.classpath"/>
        </pathconvert>
	
	<pathconvert property="run.classpath.lib" pathsep="${path.separator}">
	    <path><fileset dir="${module.basedir}/lib/"><include name="*.jar" /></fileset></path>
	</pathconvert>

        <echo message="-cp ${run.classpath.lib}" />

        <mkdir dir="${module.output.dir}/jar"/>
        <jar jarfile="${module.output.dir}/jar/${ant.project.name}-${version}-SNAPSHOT.jar"
             basedir="${module.output.dir}/classes"
             manifest="${module.basedir}/META-INF/MANIFEST.MF">
            <manifest>
                <attribute name="Specification-Vendor" value="TU Dresden, CIB"/>
                <attribute name="Specification-Version" value="${version}"/>
                <attribute name="Implementation-Vendor" value="TU Dresden, CIB"/>
                <attribute name="Implementation-Version" value="${implversion}"/>
                <attribute name="Bundle-Version" value="${version}"/>
                <attribute name="Class-Path" value="${mf.classpath}"/>
            </manifest>
        </jar>
    </target>

    <target name="test.module" depends="compile.module, compile.tests" if="tests.available">
        <echo message="testing ${module.basedir}/test" />
        <mkdir dir="${module.output.dir}/testreports" />
        <junit printsummary="yes" haltonfailure="yes" fork="yes" dir="${module.output.dir}/testclasses">
            <classpath>
                <path refid="ivy.classpath"/>
                <pathelement path="${module.output.dir}/classes" />
                <pathelement path="${module.output.dir}/testclasses" />
            </classpath>
            <formatter type="xml"/>
            <batchtest todir="${module.output.dir}/testreports">
                <fileset dir="${module.basedir}/test">
                    <include name="**/*Tests.java" />
                    <type type="file"/>
                </fileset>
            </batchtest>
        </junit>
    </target>

    <target name="publish.module" depends="dist.module">
        <ivy:publish artifactspattern="${module.output.dir}/jar/[artifact]-[revision]-SNAPSHOT.[ext]" resolver="local"
                     overwrite="true" pubrevision="${version}" pubdate="now" status="integration" forcedeliver="true" replacedynamicrev="false"/>
    </target>

    <target name="publish.module.OSGI.fast" depends="config.module"> <!-- dependency is on master level -->
        <echo message="from ${module.output.dir}/jar/${ant.project.name}-${version}-SNAPSHOT.jar to ${osgi.target}/dropins/plugins/de.tudresden.cib.${ant.project.name}_${version}.jar" />
        <copy verbose="true" includeEmptyDirs="true" failonerror="true" tofile="${osgi.target}/dropins/plugins/de.tudresden.cib.${ant.project.name}_${version}.jar" file="${module.output.dir}/jar/${ant.project.name}-${version}-SNAPSHOT.jar" />
    </target>

    <target name="publish.module.OSGI" depends="dist.module, publish.module.OSGI.fast" />

    <target name="clean.module" description="cleanup module" depends="config.module">
        <delete dir="${ivy.local.default.root}/de.tudresden.cib/${ant.project.name}/${version}" />
        <delete dir="${ivy.cache.dir}/de.tudresden.cib/${ant.project.name}/${version}" />
        <delete dir="${module.output.dir}"/>
        <delete dir="${module.basedir}/lib"/>
    </target>

</project>
